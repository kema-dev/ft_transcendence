version: '3'

networks:
  n_backend:
    driver: bridge
    name: n_backend
  n_frontend:
    driver: bridge
    name: n_frontend

services:
  s_postgresql:
    build:
      context: ./website/backend/postgresql/
    image: 's_postgres'
    networks:
      - n_backend
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRESQL_DATABASE}
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRES_USER=${POSTGRESQL_USERNAME}
    # volumes:
    #   - ./website/backend/postgresql/db:/bitnami/postgresql

  s_pgadmin:
    build:
      context: ./website/backend/pgadmin/
    image: 's_pgadmin'
    networks:
      - n_backend
    ports:
      - "${PGADMIN_HOST_PORT}:${PGADMIN_PORT_HTTP}"
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    logging: 
      driver: none

  s_nestjs:
    build:
      context: ./website/backend/nestjs/
    image: 's_nestjs'
    networks:
      - n_backend
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    volumes:
      - ./website/backend/nestjs/bind:/app
    environment:
      - POSTGRES_PORT=${POSTGRESQL_PORT}
      - POSTGRES_USER=${POSTGRESQL_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRES_DB=${POSTGRESQL_DATABASE}
      - POSTGRES_HOST=s_postgresql
    command: "sh -c '\
              echo \"POSTGRES_PORT=${POSTGRESQL_PORT}\\nPOSTGRES_PORT=${POSTGRESQL_PORT}\\nPOSTGRES_USER=${POSTGRESQL_USERNAME}\\nPOSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}\\nPOSTGRES_DB=${POSTGRESQL_DATABASE}\\nJWT_MAX_AGE=${JWT_MAX_AGE}\\nJWT_SECRET=`date +%s%N | cut -b10-19 | md5sum | head -c 20`\\nAPI_42_UID=${API_42_UID}\\nAPI_42_SECRET=${API_42_SECRET}\\nAPI_42_REDIRECT_URI=${API_42_REDIRECT_URI}\" > .env && \
              mkdir -p /secrets && \
              openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /secrets/key.pem -out /secrets/cert.pem -subj \"/C=FR/ST=France/L=Paris/O=42/OU=42/CN=ft_transcendence\" && \
              chown 1000:1000 /secrets/key.pem && \
              chown 1000:1000 /secrets/cert.pem && \
              npm config set fund false && \
              npm install && \
              npm run ${NEST_PHASE} \
              '"
    restart: unless-stopped

  s_vuejs:
    build:
      context: ./website/frontend/vuejs/
    image: 's_vuejs'
    networks:
      - n_backend
      - n_frontend
    ports:
      - "${FRONTEND_EXPOSED_HTTP}:${FRONTEND_PORT_HTTP}"
      - "${FRONTEND_EXPOSED_HTTPS}:${FRONTEND_PORT_HTTPS}"
    volumes:
      - ./website/frontend/vuejs/bind:/app
    command: "sh -c '\
              echo \"{\\\"API_42_UID\\\":\\\"$API_42_UID\\\",\\\"API_42_REDIRECT_URI\\\":\\\"$API_42_REDIRECT_URI\\\"}\" > src/env.json && \
              mkdir -p /secrets && \
              openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /secrets/key.pem -out /secrets/cert.pem -subj \"/C=FR/ST=France/L=Paris/O=42/OU=42/CN=ft_transcendence\" && \
              chown 1000:1000 /secrets/key.pem && \
              chown 1000:1000 /secrets/cert.pem && \
              yarn install --ignore-engines && \
              yarn run ${VUE_PHASE} \
              '"
    restart: unless-stopped
    environment:
      - API_42_UID=${API_42_UID}
      - API_42_REDIRECT_URI=${API_42_REDIRECT_URI}
